/**
 * @param {number} n
 * @return {number[]}
 */

// 0 => 0 =>  [0]
// 1 => 1 =>  [1] => [0, 1]                        2的0次方
// 2 => 10 => [1] => [0, 1 ,1]                     2的1次方
// 3 => 11 => [2] => [0, 1, 1, 2]                  2的1次方 + 1
// 4 => 100 => [1] => [0, 1, 1, 2, 1]              2的2次方
// 5 => 101 => [2] => [0, 1, 1, 2, 1, 2]           2的2次方 + 1
// 6 => 110 => [2] => [0, 1, 1, 2, 1, 2, 1]        2的2次方 + 2
// 7 => 111 => [3] => [0, 1, 1, 2, 1, 2, 1, 3]     2的2次方 + 3
// 8 => 1000 => [1] => [0, 1, 1, 2, 1, 2, 1, 3]    2的3次方

// n n % 2的j次方 + (n - n )

var countBits = function (n) {
    let result = [0];
    for (let i = 1; i <= n; i++) {
        result[i] = result[i >> 1] + (i & 1);
    }

    return result;
};


console.log(countBits(9));
